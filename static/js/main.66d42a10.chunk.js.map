{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","count","addOne","setState","add100","increase","reset","this","className","Stack","direction","alignItems","spacing","Button","variant","startIcon","type","onClick","color","endIcon","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iRAWaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,GAFX,EAKEC,OAAS,WACP,EAAKC,UAAS,SAACH,GAAD,MAAY,CACxBC,MAAOD,EAAMC,MAAQ,OAP3B,EAWEG,OAAS,WACP,EAAKD,UAAS,SAACH,GAAD,MAAY,CACxBC,MAAOD,EAAMC,MAAQ,SAb3B,EAiBEI,SAAW,WACT,EAAKH,SAED,EAAKF,MAAMC,MAAQ,IAAM,GAC3B,EAAKG,UArBX,EAyBEE,MAAQ,WACN,EAAKH,SAAS,CAAEF,MAAO,KA1B3B,4CA6BE,WACE,IAAQA,EAAUM,KAAKP,MAAfC,MAER,OACE,sBAAKO,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,0BACaP,KAGb,eAACQ,EAAA,EAAD,CAAOC,UAAU,MAAMC,WAAW,SAASC,QAAS,EAApD,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,UAAW,cAAC,IAAD,IACXC,KAAK,SACLR,UAAU,eACVS,QAASV,KAAKL,OALhB,eAUA,cAACW,EAAA,EAAD,CACEC,QAAQ,YACRC,UAAW,cAAC,IAAD,IACXC,KAAK,SACLR,UAAU,eACVS,QAASV,KAAKH,OALhB,iBAUA,cAACS,EAAA,EAAD,CACEC,QAAQ,YACRE,KAAK,SACLR,UAAU,gBACVS,QAASV,KAAKF,SAJhB,yBAUF,cAACQ,EAAA,EAAD,CACEC,QAAQ,YACRI,MAAM,QACNC,QAAS,cAAC,IAAD,IACTH,KAAK,SACLR,UAAU,aACVS,QAASV,KAAKD,MANhB,0BArER,GAAyBc,IAAMC,WCR/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.66d42a10.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport RotateLeftIcon from '@mui/icons-material/RotateLeft';\nimport AddIcon from '@mui/icons-material/Add';\n\ntype State = {\n  count: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    count: 0,\n  };\n\n  addOne = () => {\n    this.setState((state) => ({\n      count: state.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState((state) => ({\n      count: state.count + 100,\n    }));\n  };\n\n  increase = () => {\n    this.addOne();\n\n    if (this.state.count % 5 === 0) {\n      this.add100();\n    }\n  };\n\n  reset = () => {\n    this.setState({ count: 0 });\n  };\n\n  render() {\n    const { count } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {`Count: ${count}`}\n        </h1>\n\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            type=\"button\"\n            className=\"App__add-one\"\n            onClick={this.addOne}\n          >\n            1\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            type=\"button\"\n            className=\"App__add-100\"\n            onClick={this.add100}\n          >\n            100\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            type=\"button\"\n            className=\"App__increase\"\n            onClick={this.increase}\n          >\n            Increase\n          </Button>\n        </Stack>\n\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          endIcon={<RotateLeftIcon />}\n          type=\"button\"\n          className=\"App__reset\"\n          onClick={this.reset}\n        >\n          Reset\n        </Button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}